/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import {
  MatchResults,
} from '@stencil/router';

declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  AppHome as AppHome
} from './components/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppProfile as AppProfile
} from './components/app-profile/app-profile';

declare global {
  interface HTMLAppProfileElement extends AppProfile, HTMLStencilElement {
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-profile": JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  EmailLabel as EmailLabel
} from './components/email-label/email-label';

declare global {
  interface HTMLEmailLabelElement extends EmailLabel, HTMLStencilElement {
  }
  var HTMLEmailLabelElement: {
    prototype: HTMLEmailLabelElement;
    new (): HTMLEmailLabelElement;
  };
  interface HTMLElementTagNameMap {
    "email-label": HTMLEmailLabelElement;
  }
  interface ElementTagNameMap {
    "email-label": HTMLEmailLabelElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "email-label": JSXElements.EmailLabelAttributes;
    }
  }
  namespace JSXElements {
    export interface EmailLabelAttributes extends HTMLAttributes {
      labelColor?: string;
      labelName?: string;
    }
  }
}


import {
  EmailLabels as EmailLabels
} from './components/email-labels/email-labels';

declare global {
  interface HTMLEmailLabelsElement extends EmailLabels, HTMLStencilElement {
  }
  var HTMLEmailLabelsElement: {
    prototype: HTMLEmailLabelsElement;
    new (): HTMLEmailLabelsElement;
  };
  interface HTMLElementTagNameMap {
    "email-labels": HTMLEmailLabelsElement;
  }
  interface ElementTagNameMap {
    "email-labels": HTMLEmailLabelsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "email-labels": JSXElements.EmailLabelsAttributes;
    }
  }
  namespace JSXElements {
    export interface EmailLabelsAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  GreenButton as GreenButton
} from './components/green-button/green-button';

declare global {
  interface HTMLGreenButtonElement extends GreenButton, HTMLStencilElement {
  }
  var HTMLGreenButtonElement: {
    prototype: HTMLGreenButtonElement;
    new (): HTMLGreenButtonElement;
  };
  interface HTMLElementTagNameMap {
    "green-button": HTMLGreenButtonElement;
  }
  interface ElementTagNameMap {
    "green-button": HTMLGreenButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "green-button": JSXElements.GreenButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface GreenButtonAttributes extends HTMLAttributes {
      text?: string;
    }
  }
}


import {
  MailInformationCard as MailInformationCard
} from './components/mail-information-card/mail-information-card';

declare global {
  interface HTMLMailInformationCardElement extends MailInformationCard, HTMLStencilElement {
  }
  var HTMLMailInformationCardElement: {
    prototype: HTMLMailInformationCardElement;
    new (): HTMLMailInformationCardElement;
  };
  interface HTMLElementTagNameMap {
    "mail-information-card": HTMLMailInformationCardElement;
  }
  interface ElementTagNameMap {
    "mail-information-card": HTMLMailInformationCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "mail-information-card": JSXElements.MailInformationCardAttributes;
    }
  }
  namespace JSXElements {
    export interface MailInformationCardAttributes extends HTMLAttributes {
      content?: string;
      id?: string;
      isRead?: boolean;
      labelColor?: string;
      sender?: string;
      subject?: string;
      time?: string;
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLStencilElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
